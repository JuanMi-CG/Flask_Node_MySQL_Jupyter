version: "3.8"

services:
  backend:
    build:
      context: ./backend
      args:
        FLASK_ENV: ${FLASK_ENV:-development}
        FLASK_APP: ${FLASK_APP:-app.py}
    container_name: flask_backend
    ports:
      - "${BACKEND_PORT:-5000}:5000"
    environment:
      FLASK_ENV: ${FLASK_ENV:-development}
      FLASK_APP: ${FLASK_APP:-app.py}
      DATABASE_URI: "mysql+pymysql://${MYSQL_USER:-user}:${MYSQL_PASSWORD:-userpassword}@db:3306/${MYSQL_DATABASE:-mydatabase}"
    depends_on:
      - db
    networks:
      - app_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  frontend:
    build:
      context: ./frontend
      args:
        NODE_ENV: ${NODE_ENV:-development}
    container_name: frontend
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      API_URL: ${API_URL:-http://backend:5000}
    networks:
      - app_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 5

  jupyter:
    image: jupyter/base-notebook
    container_name: jupyter_notebook
    ports:
      - "${JUPYTER_PORT:-8888}:8888"
    volumes:
      - ./notebooks:/home/jovyan/work
    environment:
      JUPYTER_TOKEN: ${JUPYTER_TOKEN:-miclave}
    networks:
      - app_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888"]
      interval: 30s
      timeout: 10s
      retries: 5

  db:
    image: mysql:8.0
    container_name: mysql_db
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpassword}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-mydatabase}
      MYSQL_USER: ${MYSQL_USER:-user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-userpassword}
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - app_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  db_data:

networks:
  app_network:
    driver: bridge
